{
  "$id": "https://github.com/data-fair/events/api/config",
  "x-exports": [
    "types",
    "validate"
  ],
  "x-ajv": {
    "coerceTypes": "array"
  },
  "x-jstt": {
    "additionalProperties": false
  },
  "type": "object",
  "title": "Api config",
  "required": [
    "publicUrl",
    "secret",
    "kid",
    "mongo",
    "port",
    "observer",
    "secretKeys",
    "theme",
    "i18n",
    "admins",
    "storage",
    "cipherPassword",
    "anonymousAction",
    "quotas",
    "jwtDurations",
    "perOrgStorageTypes",
    "mails",
    "maildev",
    "roles",
    "listEntitiesMode",
    "oauth",
    "oidc"
  ],
  "properties": {
    "port": {
      "type": "number"
    },
    "publicUrl": {
      "type": "string"
    },
    "mongo": {
      "type": "object",
      "required": [
        "url",
        "options"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "options": {
          "type": "object"
        }
      }
    },
    "secret": {
      "type": "object",
      "required": [
        "public",
        "private"
      ],
      "properties": {
        "public": {
          "type": "string"
        },
        "private": {
          "type": "string"
        }
      }
    },
    "kid": {
      "type": "string"
    },
    "secretKeys": {
      "type": "object",
      "properties": {
        "identities": {
          "type": [
            "string",
            "null"
          ]
        },
        "events": {
          "type": [
            "string",
            "null"
          ]
        },
        "sendMails": {
          "type": [
            "string",
            "null"
          ]
        },
        "limits": {
          "type": [
            "string",
            "null"
          ]
        },
        "readAll": {
          "type": [
            "string",
            "null"
          ]
        },
        "sites": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "observer": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "port": {
          "type": "number"
        }
      }
    },
    "theme": {
      "type": "object",
      "required": [
        "logo",
        "notificationIcon",
        "notificationBadge"
      ],
      "properties": {
        "logo": {
          "type": [
            "string",
            "null"
          ]
        },
        "notificationIcon": {
          "type": [
            "string",
            "null"
          ]
        },
        "notificationBadge": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "i18n": {
      "type": "object",
      "required": [
        "locales",
        "defaultLocale"
      ],
      "properties": {
        "locales": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultLocale": {
          "type": "string",
          "default": "fr"
        }
      }
    },
    "admins": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "adminsOrg": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "adminCredentials": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "object"
        }
      }
    },
    "cipherPassword": {
      "type": "string"
    },
    "storage": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "file",
            "mongo",
            "ldap"
          ]
        },
        "file": {
          "type": "object",
          "required": [
            "users",
            "organizations"
          ],
          "properties": {
            "users": {
              "type": "string"
            },
            "organizations": {
              "type": "string"
            }
          }
        },
        "mongo": {
          "type": "object",
          "properties": {
            "readonly": {
              "type": "boolean"
            }
          }
        },
        "ldap": {
          "type": "object"
        }
      }
    },
    "onlyCreateInvited": {
      "type": "boolean"
    },
    "manageSites": {
      "type": "boolean"
    },
    "managePartners": {
      "type": "boolean"
    },
    "manageDepartments": {
      "type": "boolean"
    },
    "manageDepartmentLabel": {
      "type": "boolean"
    },
    "contact": {
      "type": "string",
      "format": "email"
    },
    "anonymousContactForm": {
      "type": "boolean"
    },
    "anonymousAction": {
      "type": "object",
      "required": [
        "expiresIn",
        "notBefore"
      ],
      "properties": {
        "expiresIn": {
          "type": "string"
        },
        "notBefore": {
          "type": "string"
        }
      }
    },
    "quotas": {
      "type": "object",
      "required": [
        "defaultMaxCreatedOrgs",
        "defaultMaxNbMembers"
      ],
      "properties": {
        "defaultMaxCreatedOrgs": {
          "type": "number"
        },
        "defaultMaxNbMembers": {
          "type": "number"
        }
      }
    },
    "depAdminIsOrgAdmin": {
      "type": "boolean"
    },
    "alwaysAcceptInvitation": {
      "type": "boolean"
    },
    "invitationRedirect": {
      "type": "string"
    },
    "jwtDurations": {
      "type": "object",
      "required": [
        "initialToken",
        "exchangedToken",
        "invitationToken",
        "partnerInvitationToken",
        "2FAToken"
      ],
      "properties": {
        "initialToken": {
          "type": "string"
        },
        "exchangedToken": {
          "type": "string"
        },
        "invitationToken": {
          "type": "string"
        },
        "partnerInvitationToken": {
          "type": "string"
        },
        "2FAToken": {
          "type": "string"
        }
      }
    },
    "passwordless": {
      "type": "boolean"
    },
    "perOrgStorageTypes": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "defaultLoginRedirect": {
      "type": "string"
    },
    "mails": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "transport": {
          "type": "object"
        },
        "extraParams": {
          "type": "object"
        }
      }
    },
    "maildev": {
      "type": "object",
      "required": [
        "url",
        "active",
        "smtp",
        "web"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "smtp": {
          "type": "number"
        },
        "web": {
          "type": "number"
        }
      }
    },
    "listEntitiesMode": {
      "enum": [
        "anonymous",
        "authenticated",
        "admin"
      ]
    },
    "listUserMode": {
      "enum": [
        "anonymous",
        "authenticated",
        "admin",
        null
      ]
    },
    "listOrganizationsMode": {
      "enum": [
        "anonymous",
        "authenticated",
        "admin",
        null
      ]
    },
    "roles": {
      "type": "object",
      "required": [
        "defaults"
      ],
      "properties": {
        "defaults": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "oauth": {
      "type": "object",
      "required": [
        "providers",
        "github",
        "facebook",
        "google",
        "linkedin"
      ],
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "enum": [
              "github",
              "facebook",
              "google",
              "linkedin"
            ]
          }
        },
        "github": {
          "$ref": "#/$defs/oauthClient"
        },
        "facebook": {
          "$ref": "#/$defs/oauthClient"
        },
        "google": {
          "$ref": "#/$defs/oauthClient"
        },
        "linkedin": {
          "$ref": "#/$defs/oauthClient"
        }
      }
    },
    "oidc": {
      "type": "object",
      "required": [
        "providers"
      ],
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/oidcProvider"
          }
        }
      }
    }
  },
  "$defs": {
    "oauthClient": {
      "type": "object",
      "required": [
        "id",
        "secret"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "oidcProvider": {
      "type": "object",
      "title": "OpenID Connect",
      "required": ["discovery", "client"],
      "properties": {
        "color": {
          "type": "string",
          "title": "Couleur",
          "x-display": "color-picker"
        },
        "img": {
          "type": "string",
          "title": "URL du logo (petite taille)"
        },
        "type": {
          "type": "string",
          "title": "Type de fournisseur",
          "const": "oidc"
        },
        "discovery": {
          "type": "string",
          "title": "URL de d√©couverte",
          "description": "probablement de la forme http://mon-fournisseur/.well-known/openid-configuration"
        },
        "client": {
          "type": "object",
          "required": ["id", "secret"],
          "properties": {
            "id": {
              "type": "string",
              "title": "Identifiant du client"
            },
            "secret": {
              "type": "string",
              "title": "Secret",
              "writeOnly": true
            }
          }
        },
        "createMember": {
          "type": "object",
          "description": "si cette option est activ√©e tous les utilisateurs cr√©√©s au travers de ce fournisseur d'identit√© seront automatiquement membres de l'organisation propri√©taire du site.",
          "default": {"type": "never"},
          "oneOf": [
            { "title": "jamais", "properties": {"type": {"const": "never", "title": "Cr√©er les utilisateurs en tant que membres" } } },
            { "title": "toujours", "properties": {"type": {"const": "always"} } },
            { "title": "quand l'email appartient √† un nom de domaine", "properties": {
              "type": {"const": "emailDomain"},
              "emailDomain": {"type": "string", "title": "nom de domaine de l'email"}
            } }
          ]
        },
        "memberRole": {
          "type": "object",
          "description": "Le r√¥le des membres cr√©√©s automatiquement par ce fournisseur d'identit√©.",
          "default": {"type": "none"},
          "oneOf": [
            {"title": "Aucun r√¥le par d√©faut (simple utilisateur)", "properties": {"type": {"const": "none", "title": "Attribution du r√¥le des membres"} } },
            {"title": "Tout le temps ce r√¥le : ", "properties": {"type": {"const": "static"}, "role": {"type": "string", "title": "R√¥le des membres"}}},
            {"title": "R√¥le lu dans un attribut de l'identit√©", "properties": {"type": {"const": "attribute"}, "attribute": {"type": "string", "title": "Nom de l'attribut"}}}
          ]
        },
        "ignoreEmailVerified": {
          "type": "boolean",
          "title": "Accepter les utilisateurs aux emails non v√©rifi√©s",
          "description": "Par d√©faut si le fournisseur d'identit√© retourne email_verified=false l'authentification est refus√©e. Cochez cette option pour changer ce comportement."
        },
        "coreIdProvider": {
          "type": "boolean",
          "title": "Traiter ce fournisseur comme une source principale d'identit√©",
          "description": "Cette option a plusieurs effets :\n  - un compte associ√© √† ce fournisseur ne peut pas avoir d'autre moyen d'authentification (mot de posse ou autre fournisseur rattach√© au m√™me compte)\n  - les informations du compte seront en lecture seule et synchronis√©es automatiquement depuis le fournisseur quand l'utilisateur a une session active\n  - cette synchronisation inclue la destruction de la session et la d√©sactivation du compte si celui-ci n'existe plus dans le fournisseur d'identit√©\n - si l'option \"R√¥le des membres\" est utilis√©e le r√¥le sera lui aussi synchronis√© et ne sera pas √©ditable dans le back-office"
        },
        "redirectMode": {"$ref": "#/$defs/redirectMode"}
      }
    },
    "redirectMode": {
      "type": "object",
      "description": "Si vous utilisez un mode bas√© sur l'email alors la mire d'authentification demandera l'email de l'utilisateur en 1√®re √©tape.",
      "default": {"type": "button"},
      "oneOf": [
        {"title": "bouton", "properties": {"type": {"const": "button", "title": "Controlez la mani√®re dont les utilisateurs sont redirig√©s vers ce fournisseur"}}},
        {"title": "redirection auto quand l'email appartient √† un nom de domaine", "properties": {
          "type": {"const": "emailDomain"},
          "emailDomain": {"type": "string", "title": "nom de domaine de l'email"}
        } },
        {"title": "toujours rediriger implicitement", "properties": {"type": {"const": "always"}}}
      ]
    }
  }
}