# nginx configuration file for Data Fair development and test environment

user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # use header origin if referer is empty
    map $http_referer $reqref {                                                 
        default   $http_referer;                                               
        ""        $http_origin;                                                      
    }

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # first origin http://localhost:5689
    server {
      listen 5689;
      server_name _;

      # Transmit host, protocol and user ip, we use it for routing, rate limiting, etc.
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Client-IP $remote_addr;
      # web socket support
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      # redirect root to /simple-directory/
      location = / {  
        return 302 /simple-directory/;
      }

      location /simple-directory/api {
        proxy_pass http://localhost:5690;
      }
      location /simple-directory/.well-known {
        proxy_pass http://localhost:5690;
      }
      location /simple-directory {
        proxy_pass http://localhost:6220;
      }
      location /mails {
        rewrite  ^/mails/(.*) /$1 break;
        proxy_pass http://localhost:1080/;
      }
      location /events {
        proxy_pass http://localhost:8088;
      }
    }

    # another one to simulate multi-site usage
    server {
      listen 5989;
      server_name _;

      # Transmit host, protocol and user ip, we use it for routing, rate limiting, etc.
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Client-IP $remote_addr;
      # web socket support
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      # redirect root to /simple-directory/
      location = / {  
        return 302 /simple-directory/;
      }

      location /simple-directory/api {
        proxy_pass http://localhost:5690;
      }
      location /simple-directory/.well-known {
        proxy_pass http://localhost:5690;
      }
      location /simple-directory {
        proxy_pass http://localhost:6220;
      }
      location /mails {
        rewrite  ^/mails/(.*) /$1 break;
        proxy_pass http://localhost:1080/;
      }
      location /events {
        proxy_pass http://localhost:8088/;
      }
    }

    # another one to simulate multi-site usage
    server {
      listen 5999;
      server_name _;

      # Transmit host, protocol and user ip, we use it for routing, rate limiting, etc.
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Client-IP $remote_addr;
      # web socket support
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      # redirect root to /simple-directory/
      location = / {  
        return 302 /simple-directory/;
      }

      location /simple-directory/api {
        proxy_pass http://localhost:5690;
      }
      location /simple-directory/.well-known {
        proxy_pass http://localhost:5690;
      }
      location /simple-directory {
        proxy_pass http://localhost:6220;
      }
      location /mails {
        rewrite  ^/mails/(.*) /$1 break;
        proxy_pass http://localhost:1080/;
      }
      location /events {
        proxy_pass http://localhost:8088/;
      }
    }

    # another one to simulate multi-site with a path prefix
    server {
      listen 6099;
      server_name _;

      # Transmit host, protocol and user ip, we use it for routing, rate limiting, etc.
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Client-IP $remote_addr;
      # web socket support
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";

      # redirect root to /simple-directory/
      location = / {  
        return 302 /site-prefix/simple-directory/;
      }
      location = /site-prefix {  
        return 302 /site-prefix/simple-directory/;
      }

      location /site-prefix/simple-directory/api {
        proxy_pass http://localhost:5690;
      }
      location /site-prefix/simple-directory/.well-known {
        proxy_pass http://localhost:5690;
      }
      location /site-prefix/simple-directory {
        proxy_pass http://localhost:6220;
      }
      location /site-prefix/mails {
        rewrite  ^/mails/(.*) /$1 break;
        proxy_pass http://localhost:1080/;
      }
      location /site-prefix/events {
        proxy_pass http://localhost:8088/;
      }
    }
}